"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[767],{794:(e,t,r)=>{r.d(t,{Ay:()=>s,yl:()=>n});var n=function(e){return e.REDIRECT="redirect",e.SUCCESS="success",e.KNOWN_ERROR="known_error",e.EXPIRED="expired",e}(n||{}),o=function(e){return e.REFRESH="/auth/refreshToken/",e.SIGNIN="/",e.CONFIRM="/auth/confirm/",e}(o||{});async function s(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=arguments.length>2&&void 0!==arguments[2]&&arguments[2],n=localStorage.getItem("token"),o={...t,headers:{...t.headers,...r&&n&&{Authorization:"Bearer ".concat(n)}}};if(r&&!n)return{type:"redirect",link:"/"};try{let t=await fetch(e,o);return await a(t,e,o)}catch(t){let e=t instanceof Error?t.message:"Unknown error";throw Error("Network error: ".concat(e))}}async function a(e,t,r){let{status:n}=e;switch(n){case 200:case 201:return{type:"success",payload:await e.json()};case 204:return{type:"success",payload:{message:"Deleted"}};case 401:return await i(e,t,r);case 403:return{type:"redirect",link:"/auth/confirm/"};case 406:return{type:"known_error",message:(await e.json()).message};default:throw Error("Server Error: ".concat(n))}}async function i(e,t,r){return"user_not_found"===(await e.json()).code?{type:"redirect",link:"/"}:await c()?await s(t,r,!0):(console.log("user session has expired!"),window.localStorage.clear(),{type:"expired",link:"/"})}async function c(){let e=localStorage.getItem("refresh");if(!e)return!1;try{let t=await fetch("".concat("https://suifunds.yuviewenergy.com","/auth/refreshToken/"),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({refresh:e})});if(t.ok){let e=await t.json();return localStorage.setItem("token",e.access),localStorage.setItem("refresh",e.refresh),!0}return!1}catch(e){return console.error("Token refresh failed:",e),!1}}},5676:(e,t,r)=>{r.d(t,{NM:()=>i,iH:()=>u,yZ:()=>l});var n=r(8822),o=r(1200),s=r(1155),a=r(7104);class i{async createSavingsGroup(e,t){try{var r;if(0===e.participants.length)throw Error("At least one participant is required");let n=e.participants.map(e=>e.position),o=new Set(n);if(n.length!==o.size)throw Error("Duplicate positions detected");let i=e.participants.length;for(let t of e.participants)if(t.position<1||t.position>i)throw Error("Position must be between 1 and ".concat(i));if(0===e.multisigConfig.signers.length)throw Error("At least one multisig signer is required");if(e.multisigConfig.threshold<=0||e.multisigConfig.threshold>e.multisigConfig.signers.length)throw Error("Invalid multisig threshold");let c=new s.Z,l=e.participants.map(e=>a.h.fromSecretKey(e.wallet).getPublicKey().toSuiAddress()),u=e.participants.map(e=>e.position);console.log("Participant wallets:",l),console.log("Participant positions:",u),console.log("Multisig signers:",e.multisigConfig.signers),console.log("Multisig threshold:",e.multisigConfig.threshold),c.moveCall({target:"".concat(this.packageId,"::codeforge::create_savings_group"),arguments:[c.pure.string(e.name),c.pure.u64(e.cycleDurationDays),c.pure.u64(e.startCycle),c.pure.u64(e.contributionAmount),c.pure.vector("address",l),c.pure.vector("u8",u),c.pure.vector("address",e.multisigConfig.signers),c.pure.u64(e.multisigConfig.threshold),c.object("0x0000000000000000000000000000000000000000000000000000000000000006")]}),c.setGasBudget(1e7);let g=await this.client.signAndExecuteTransaction({signer:t,transaction:c,options:{showEvents:!0,showEffects:!0,showObjectChanges:!0},requestType:"WaitForLocalExecution"});if(console.log("Transaction result:",g),g.objectChanges){let e=g.objectChanges.find(e=>{var t;return"created"===e.type&&(null==(t=e.objectType)?void 0:t.includes("SavingsGroup"))});if(e&&"objectId"in e)return{groupId:e.objectId,digest:g.digest}}let f=null==(r=g.events)?void 0:r.find(e=>e.type.includes("GroupCreated"));if(f&&f.parsedJson)return{groupId:f.parsedJson.group_id,digest:g.digest};throw Error("Failed to get group ID from transaction result")}catch(e){if(console.error("Error creating savings group:",e),e instanceof Error&&(e.message.includes("No valid gas coins found")||e.message.includes("insufficient gas")||e.message.includes("Insufficient SUI balance")))throw Error("Insufficient SUI balance for gas fees. Please add SUI to your wallet.");throw e}}async contribute(e,t,r){try{let n=a.h.fromSecretKey(r),o=new s.Z,[i]=o.splitCoins(o.gas,[o.pure.u64(1e9*t)]);o.moveCall({target:"".concat(this.packageId,"::codeforge::contribute"),arguments:[o.object(e),i,o.object("0x0000000000000000000000000000000000000000000000000000000000000006")]});let c=await this.client.signAndExecuteTransaction({signer:n,transaction:o,options:{showEvents:!0,showEffects:!0}});return console.log("Contribution transaction result:",c),c.digest}catch(e){if(console.error("Error making contribution:",e),e instanceof Error&&(e.message.includes("No valid gas coins found")||e.message.includes("insufficient gas")||e.message.includes("Insufficient SUI balance")))throw Error("Insufficient SUI balance for gas fees. Please add SUI to your wallet.");throw e}}async startNewCycle(e,t){try{let r=a.h.fromSecretKey(t),n=new s.Z;n.moveCall({target:"".concat(this.packageId,"::codeforge::start_new_cycle"),arguments:[n.object(e),n.object("0x0000000000000000000000000000000000000000000000000000000000000006")]});let o=await this.client.signAndExecuteTransaction({signer:r,transaction:n,options:{showEvents:!0,showEffects:!0}});return console.log("Start new cycle transaction result:",o),o.digest}catch(e){if(console.error("Error starting new cycle:",e),e instanceof Error&&(e.message.includes("No valid gas coins found")||e.message.includes("insufficient gas")||e.message.includes("Insufficient SUI balance")))throw Error("Insufficient SUI balance for gas fees. Please add SUI to your wallet.");throw e}}async proposePayout(e,t){try{let r=new s.Z;r.moveCall({target:"".concat(this.packageId,"::codeforge::propose_payout"),arguments:[r.object(e),r.object("0x0000000000000000000000000000000000000000000000000000000000000006")]});let n=await this.client.signAndExecuteTransaction({signer:t,transaction:r,options:{showEvents:!0,showEffects:!0}});return console.log("Propose payout transaction result:",n),n.digest}catch(e){if(console.error("Error proposing payout:",e),e instanceof Error&&(e.message.includes("No valid gas coins found")||e.message.includes("insufficient gas")||e.message.includes("Insufficient SUI balance")))throw Error("Insufficient SUI balance for gas fees. Please add SUI to your wallet.");throw e}}async signPayout(e,t){try{let r=new s.Z;r.moveCall({target:"".concat(this.packageId,"::codeforge::sign_payout"),arguments:[r.object(e)]});let n=await this.client.signAndExecuteTransaction({signer:t,transaction:r,options:{showEvents:!0,showEffects:!0}});return console.log("Sign payout transaction result:",n),n.digest}catch(e){if(console.error("Error signing payout:",e),e instanceof Error&&(e.message.includes("No valid gas coins found")||e.message.includes("insufficient gas")||e.message.includes("Insufficient SUI balance")))throw Error("Insufficient SUI balance for gas fees. Please add SUI to your wallet.");throw e}}async executePayout(e,t){try{let r=new s.Z;r.moveCall({target:"".concat(this.packageId,"::codeforge::execute_payout"),arguments:[r.object(e)]});let n=await this.client.signAndExecuteTransaction({signer:t,transaction:r,options:{showEvents:!0,showEffects:!0}});return console.log("Execute payout transaction result:",n),n.digest}catch(e){if(console.error("Error executing payout:",e),e instanceof Error&&(e.message.includes("No valid gas coins found")||e.message.includes("insufficient gas")||e.message.includes("Insufficient SUI balance")))throw Error("Insufficient SUI balance for gas fees. Please add SUI to your wallet.");throw e}}constructor(e){this.client=new n.x({url:(0,o.T)(e.network)}),this.packageId=e.packageId}}let c={packageId:"0xc9be599a1ce3605fcccaf86a1cd857d09bdf7f5f2acc39b775d13b1cbff52c35",network:"testnet"};async function l(e,t,r,n,o,s,l,u,g){var f,d;let h=(f=u,d=l,new i({packageId:f||c.packageId,network:d||c.network})),p=function(e,t){console.log(e);let r=e.map(e=>a.h.fromSecretKey(e.wallet).getPublicKey().toSuiAddress()),n=Math.ceil(e.length/2);return{signers:r,threshold:t||n}}(o,g),w=a.h.fromSecretKey(s);return await h.createSavingsGroup({name:e,cycleDurationDays:t,startCycle:r,contributionAmount:1e9*n,participants:o,multisigConfig:p},w)}async function u(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"testnet";try{if(!e||"string"!=typeof e)throw Error("Invalid address provided");let r=["testnet","mainnet","devnet"];if(!r.includes(t))throw Error("Invalid network. Must be one of: ".concat(r.join(", ")));let s=(0,o.T)(t),i=new n.x({url:s}),c=await i.getBalance({owner:a.h.fromSecretKey(e).getPublicKey().toSuiAddress(),coinType:"0x2::sui::SUI"}),l=parseInt(c.totalBalance)/1e9;return{balance:c.totalBalance,balanceInSui:l,coinObjectCount:c.coinObjectCount}}catch(e){throw console.error("Error fetching SUI balance:",e),Error("Failed to fetch balance: ".concat((null==e?void 0:e.message)||"Unknown error"))}}}}]);